{"version":3,"sources":["pages/home.js","pages/form.js","pages/Formik.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","state","value","prev","name","this","setState","setTimeout","nextProps","console","log","nextState","prevProps","prevState","title","React","Component","Form","doABarellRoll","usernameInputRef","current","classList","add","remove","stopRoll","keepRolling","focusUsernameInput","focus","createRef","type","ref","onClick","CustomUsernameInput","label","useField","field","meta","htmlFor","id","className","touched","error","CustomPasswordInput","FormikForm","initialValues","username","password","validationSchema","Yup","min","max","required","onSubmit","values","setSubmitting","resetForm","alert","JSON","stringify","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b61ad61c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class Home extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      value: 0,\n      prev: \"\",\n      name: \"\",\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({ value: \"Loading\" });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ value: 32 });\n    }, 2000);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    console.log(\"Component will receive props\", nextProps);\n    this.setState({ name: nextProps.name });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"Should Component update\", nextProps, nextState);\n    if (nextProps.value === \"1\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps, nextState) {\n    console.log(\"Component will update\", nextProps, nextState);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"Component did update\", prevProps, prevState);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>{this.props.title}</h1>\n        <p>{this.state.value}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport class Form extends React.Component {\n  constructor(props) {\n    super();\n    this.usernameInputRef = React.createRef();\n  }\n\n  doABarellRoll = () => {\n    this.usernameInputRef.current.classList.add(\"block__input\");\n    setTimeout(() => {\n      this.usernameInputRef.current.classList.remove(\"block__input\");\n    }, 250);\n  };\n\n  stopRoll = () => {\n    this.usernameInputRef.current.classList.remove(\"block__input\");\n  };\n\n  keepRolling = () => {\n    this.usernameInputRef.current.classList.add(\"block__input\");\n  };\n\n  focusUsernameInput = () => {\n    this.usernameInputRef.current.focus();\n  };\n\n  render() {\n    return (\n      <>\n        <br />\n        <h1>Ref Example</h1>\n        <label>Username:</label>\n        <input type=\"text\" ref={this.usernameInputRef} />\n        <button onClick={this.doABarellRoll}>Roll Once</button>\n        <button onClick={this.keepRolling}>Keep Rolling</button>\n        <button onClick={this.stopRoll}>Stop Roll</button>\n        <button onClick={this.focusUsernameInput}>Focus Input Field</button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Form, Formik, useField } from 'formik'\nimport * as Yup from 'yup';\n\nconst CustomUsernameInput = ({label, ...props}) => {\n    const [field, meta] = useField(props)\n\n    return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <input className=\"\" {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    )\n}\n\nconst CustomPasswordInput = ({label, ...props}) => {\n    const [field, meta] = useField(props)\n\n    return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <input className=\"\" {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    )\n}\n\nexport const FormikForm = () => {\n    return (\n        <>\n            <Formik\n             initialValues={{\n                 username: '',\n                 password: '',\n             }}\n             validationSchema={Yup.object({\n                 username: Yup.string()\n                 .min(3, 'Must be at least 3 characters long')\n                 .max(15, 'Must be 15 characters or less')\n                 .required('Required'),\n                 password: Yup.string()\n                 .min(8, 'Must be at least 8 characters long')\n                 .max(56, 'Must be 56 characters of less')\n             })}\n             onSubmit={(values, {setSubmitting, resetForm}) => {\n                 setTimeout(() => {\n                     alert(JSON.stringify(values, null ,2))\n                     resetForm()\n                     setSubmitting(false)\n                 }, 3000)\n             }}\n            >\n                {props => (\n                    <Form>\n                        <h1>Formik Login Form</h1>\n                        <CustomUsernameInput label=\"username\" name=\"username\" type=\"text\" placeholder=\"username\"/>\n                        <CustomPasswordInput label=\"password\" name=\"password\" type=\"password\" placeholder=\"password\"/>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}","import './App.css';\nimport { Home } from './pages/home'\nimport { Form } from './pages/form'\nimport { FormikForm } from './pages/Formik'\nfunction App() {\n  return (\n    <>\n      <Home name=\"zain\" title=\"should update is false\"/>\n      <Home name=\"zain\" value=\"1\" title=\"should update is true\"/>\n      <Form />\n      <FormikForm />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}